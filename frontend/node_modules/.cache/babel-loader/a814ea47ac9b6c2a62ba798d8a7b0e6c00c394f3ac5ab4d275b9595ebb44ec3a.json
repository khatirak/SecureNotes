{"ast":null,"code":"import React,{useState,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";import{addNote}from\"../api\";import{AuthContext}from\"../context/AuthContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NoteForm=_ref=>{let{onNoteAdded}=_ref;const[text,setText]=useState(\"\");const[error,setError]=useState(\"\");const[success,setSuccess]=useState(\"\");const{logout}=useContext(AuthContext);const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();if(!text.trim()){setError(\"Note cannot be empty\");return;}try{await addNote(text);setText(\"\");setError(\"\");setSuccess(\"Note added successfully!\");onNoteAdded();// Clear success message after 3 seconds\nsetTimeout(()=>{setSuccess(\"\");},3000);}catch(err){if(err.response&&err.response.status===401){setError(\"Authentication error. Please log in again.\");// Redirect to login after 2 seconds\nsetTimeout(()=>{logout();navigate(\"/\");},2000);}else{setError(\"Failed to add note\");}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"note-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Note\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success\",children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"textarea\",{value:text,onChange:e=>setText(e.target.value),placeholder:\"Enter your note...\",rows:4})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Note\"})]})]});};export default NoteForm;","map":{"version":3,"names":["React","useState","useContext","useNavigate","addNote","AuthContext","jsx","_jsx","jsxs","_jsxs","NoteForm","_ref","onNoteAdded","text","setText","error","setError","success","setSuccess","logout","navigate","handleSubmit","e","preventDefault","trim","setTimeout","err","response","status","className","children","onSubmit","value","onChange","target","placeholder","rows","type"],"sources":["/Users/khatirakazemi/Documents/GitHub/SecureNotes/frontend/src/components/NoteForm.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addNote } from \"../api\";\nimport { AuthContext } from \"../context/AuthContext\";\n\ninterface NoteFormProps {\n  onNoteAdded: () => void;\n}\n\nconst NoteForm: React.FC<NoteFormProps> = ({ onNoteAdded }) => {\n  const [text, setText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const { logout } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!text.trim()) {\n      setError(\"Note cannot be empty\");\n      return;\n    }\n\n    try {\n      await addNote(text);\n      setText(\"\");\n      setError(\"\");\n      setSuccess(\"Note added successfully!\");\n      onNoteAdded();\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccess(\"\");\n      }, 3000);\n    } catch (err: any) {\n      if (err.response && err.response.status === 401) {\n        setError(\"Authentication error. Please log in again.\");\n        // Redirect to login after 2 seconds\n        setTimeout(() => {\n          logout();\n          navigate(\"/\");\n        }, 2000);\n      } else {\n        setError(\"Failed to add note\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"note-form\">\n      <h3>Add New Note</h3>\n      {error && <div className=\"error\">{error}</div>}\n      {success && <div className=\"success\">{success}</div>}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <textarea\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter your note...\"\n            rows={4}\n          />\n        </div>\n        <button type=\"submit\">Add Note</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NoteForm;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,QAAQ,CAChC,OAASC,WAAW,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMrD,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CACxD,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAEkB,MAAO,CAAC,CAAGjB,UAAU,CAACG,WAAW,CAAC,CAC1C,KAAM,CAAAe,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAkB,YAAY,CAAG,KAAO,CAAAC,CAAkB,EAAK,CACjDA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACV,IAAI,CAACW,IAAI,CAAC,CAAC,CAAE,CAChBR,QAAQ,CAAC,sBAAsB,CAAC,CAChC,OACF,CAEA,GAAI,CACF,KAAM,CAAAZ,OAAO,CAACS,IAAI,CAAC,CACnBC,OAAO,CAAC,EAAE,CAAC,CACXE,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,0BAA0B,CAAC,CACtCN,WAAW,CAAC,CAAC,CAEb;AACAa,UAAU,CAAC,IAAM,CACfP,UAAU,CAAC,EAAE,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAE,MAAOQ,GAAQ,CAAE,CACjB,GAAIA,GAAG,CAACC,QAAQ,EAAID,GAAG,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CAC/CZ,QAAQ,CAAC,4CAA4C,CAAC,CACtD;AACAS,UAAU,CAAC,IAAM,CACfN,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACLJ,QAAQ,CAAC,oBAAoB,CAAC,CAChC,CACF,CACF,CAAC,CAED,mBACEP,KAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBvB,IAAA,OAAAuB,QAAA,CAAI,cAAY,CAAI,CAAC,CACpBf,KAAK,eAAIR,IAAA,QAAKsB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEf,KAAK,CAAM,CAAC,CAC7CE,OAAO,eAAIV,IAAA,QAAKsB,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEb,OAAO,CAAM,CAAC,cACpDR,KAAA,SAAMsB,QAAQ,CAAEV,YAAa,CAAAS,QAAA,eAC3BvB,IAAA,QAAKsB,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBvB,IAAA,aACEyB,KAAK,CAAEnB,IAAK,CACZoB,QAAQ,CAAGX,CAAC,EAAKR,OAAO,CAACQ,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CACzCG,WAAW,CAAC,oBAAoB,CAChCC,IAAI,CAAE,CAAE,CACT,CAAC,CACC,CAAC,cACN7B,IAAA,WAAQ8B,IAAI,CAAC,QAAQ,CAAAP,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnC,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}