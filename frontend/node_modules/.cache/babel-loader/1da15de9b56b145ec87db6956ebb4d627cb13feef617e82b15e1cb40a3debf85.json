{"ast":null,"code":"var _jsxFileName = \"/Users/khatirakazemi/Documents/GitHub/SecureNotes/frontend/src/pages/NotesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NoteList from \"../components/NoteList\";\nimport NoteForm from \"../components/NoteForm\";\nimport { getNotes } from \"../api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotesPage = () => {\n  _s();\n  const {\n    isAuthenticated,\n    logout\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    // Redirect to login if not authenticated\n    if (!isAuthenticated) {\n      navigate(\"/\");\n      return;\n    }\n\n    // Fetch notes\n    fetchNotes();\n  }, [isAuthenticated, navigate]);\n  const fetchNotes = async () => {\n    try {\n      setLoading(true);\n      const fetchedNotes = await getNotes();\n      setNotes(fetchedNotes);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Failed to load notes\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n    navigate(\"/\");\n  };\n  if (!isAuthenticated) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SecureNotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NoteForm, {\n        onNoteAdded: fetchNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n        notes: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesPage, \"HYNThfFViZnRNgwgyrb+1JAs5xc=\", false, function () {\n  return [useNavigate];\n});\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","AuthContext","NoteList","NoteForm","getNotes","jsxDEV","_jsxDEV","Fragment","_Fragment","NotesPage","_s","isAuthenticated","logout","navigate","notes","setNotes","loading","setLoading","error","setError","fetchNotes","fetchedNotes","err","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onNoteAdded","_c","$RefreshReg$"],"sources":["/Users/khatirakazemi/Documents/GitHub/SecureNotes/frontend/src/pages/NotesPage.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NoteList from \"../components/NoteList\";\nimport NoteForm from \"../components/NoteForm\";\nimport { getNotes } from \"../api\";\nimport { Note } from \"../types\";\n\nconst NotesPage: React.FC = () => {\n  const { isAuthenticated, logout } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    // Redirect to login if not authenticated\n    if (!isAuthenticated) {\n      navigate(\"/\");\n      return;\n    }\n\n    // Fetch notes\n    fetchNotes();\n  }, [isAuthenticated, navigate]);\n\n  const fetchNotes = async () => {\n    try {\n      setLoading(true);\n      const fetchedNotes = await getNotes();\n      setNotes(fetchedNotes);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Failed to load notes\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate(\"/\");\n  };\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <div className=\"notes-page\">\n      <div className=\"header\">\n        <h1>SecureNotes</h1>\n        <button className=\"logout-button\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {loading ? (\n        <p>Loading notes...</p>\n      ) : (\n        <>\n          <NoteForm onNoteAdded={fetchNotes} />\n          <NoteList notes={notes} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NotesPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}